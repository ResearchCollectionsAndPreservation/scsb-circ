buildscript {
	ext {
		springBootVersion = '2.7.1'
		set('springCloudVersion', "2021.0.3")
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	id "org.sonarqube" version "3.4.0.2513"
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'org.springframework.boot' version '2.7.1'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'jacoco'

//added to accept systemproperties while executing gradlew test cmd

jar {
	archivesBaseName = 'scsb-circ'
	archiveVersion = '0.0.1-SNAPSHOT'
}
sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

repositories {
	mavenCentral()
}


dependencies {
	implementation fileTree(dir: '/data/commonjar',include: '*2.3.jar')
	implementation fileTree(dir: '/data/commonjar', include: 'jsip2-1.1.0.jar')
	implementation fileTree(dir: '/data/commonjar', include: 'ncip-new.jar')
	implementation 'org.projectlombok:lombok:1.18.24'
	annotationProcessor 'org.projectlombok:lombok:1.18.24'
	testImplementation 'org.projectlombok:lombok:1.18.24'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
	implementation('org.springframework.boot:spring-boot-starter-web-services')
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation("org.springframework.boot:spring-boot-starter-data-rest")

	implementation 'net.sf.dozer:dozer:5.5.1'
	implementation group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '4.0.0'
	implementation 'javax.servlet:javax.servlet-api:4.0.1'
	implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.1'
	implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'

	implementation('commons-beanutils:commons-beanutils:1.9.4')

	implementation('commons-io:commons-io:2.11.0')
	implementation('io.springfox:springfox-swagger-ui:3.0.0')
	implementation('io.springfox:springfox-swagger2:3.0.0')
	implementation('org.codehaus.jettison:jettison:1.5.0')
	implementation('org.apache.camel.springboot:camel-spring-boot-starter:3.18.0')
	implementation group: 'org.apache.camel.springboot', name: 'camel-aws-s3-starter', version: '3.8.0'
	implementation group: 'org.apache.camel', name: 'camel-aws-s3', version: '3.8.0'
	implementation('org.apache.camel:camel-activemq:3.18.0')
	implementation('org.apache.camel:camel-core-engine:3.18.0')
	implementation('org.apache.camel:camel-core:3.18.0')
	implementation('org.apache.camel:camel-support:3.18.0')
	implementation('org.apache.camel:camel-bindy:3.18.0')
	implementation('org.apache.camel:camel-mail:3.18.0')
	implementation('org.apache.camel:camel-ftp:3.18.0')
	implementation('org.apache.camel:camel-jms:3.18.0')
	implementation('org.apache.camel:camel-zipfile:3.18.0')
	implementation('org.apache.activemq:activemq-camel:5.16.5')
	implementation('org.apache.activemq:activemq-pool:5.17.1')
	implementation('org.apache.activemq:activemq-broker:5.17.1')
	implementation('org.apache.activemq:activemq-client:5.17.1')
	implementation('info.freelibrary:freelib-marc4j:2.6.12')
	implementation('org.apache.poi:poi:5.2.2')
	implementation group: 'org.apache.camel', name: 'camel-zip-deflater', version: '3.14.0'
	implementation group: 'org.apache.commons', name: 'commons-text', version: '1.9'

	implementation('org.apache.poi:poi-ooxml:5.2.2')
	implementation 'io.micrometer:micrometer-registry-prometheus'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
	implementation 'net.logstash.logback:logstash-logback-encoder:7.2'
	compileOnly('org.projectlombok:lombok:1.18.24')
	annotationProcessor 'org.projectlombok:lombok:1.18.24'

	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'
	implementation group: 'org.json', name: 'json', version: '20220320'
	implementation group: 'com.google.code.gson', name: 'gson', version: '2.9.0'

	testImplementation('org.springframework.boot:spring-boot-starter-test')
	implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.26'

	testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.12.4'
	testImplementation group: 'org.powermock', name: 'powermock-api-mockito2', version: '2.0.9'
	testImplementation group: 'org.powermock', name: 'powermock-module-junit4', version: '2.0.9'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.1'
	implementation("org.springframework.boot:spring-boot-starter-actuator")
}

configurations.all {
	resolutionStrategy.eachDependency { DependencyResolveDetails details ->
		if (details.requested.group == 'org.apache.logging.log4j') {
			details.useVersion '2.18.0'
		}
	}
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
}

jacocoTestReport {
	reports {
		xml.required = true
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}


jacoco {
	toolVersion = "0.8.8"
	reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}



task scsbCircJavadocs(type: Javadoc) {
	source = sourceSets.main.java
	classpath = configurations.implementation
	options.addStringOption('Xdoclint:none', '-quiet')
	String home = System.getProperty("user.home");
	destinationDir = new File(home+"/scsb-javadocs/scsb-circ");

}

bootJar {
	layered {
		enabled = true
	}
}

jar {
	enabled = false
	archiveClassifier = '' //use empty string
}